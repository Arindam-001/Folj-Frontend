import React, { useState } from 'react';
import { Search } from 'lucide-react';

export default function RequestsListPage() {
  const [searchValue, setSearchValue] = useState('');
  const [searchType, setSearchType] = useState('');
  const [requests, setRequests] = useState([]);

  const handleSubmit = () => {
    // Handle search submission - connect to backend here
    console.log('Search:', searchValue, 'Type:', searchType);
  };

  const getStatusColor = (status) => {
    switch (status) {
      case 'Pending':
        return 'bg-yellow-500 bg-opacity-20 text-yellow-400 border-yellow-500';
      case 'In Progress':
        return 'bg-blue-500 bg-opacity-20 text-blue-400 border-blue-500';
      case 'Completed':
        return 'bg-green-500 bg-opacity-20 text-green-400 border-green-500';
      default:
        return 'bg-gray-500 bg-opacity-20 text-gray-400 border-gray-500';
    }
  };

  return (
    <div className="min-h-screen bg-black p-4 md:p-8">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="bg-gradient-to-r from-yellow-700 to-yellow-600 rounded-t-2xl p-6">
          <h1 className="text-3xl md:text-4xl font-bold text-white text-center">
            Connection Requests
          </h1>
        </div>

        {/* Search Section */}
        <div className="bg-gradient-to-b from-gray-900 to-gray-950 rounded-b-2xl p-6 md:p-8">
          <div className="mb-8">
            <div className="flex flex-col md:flex-row gap-4">
              {/* Search Input */}
              <div className="flex-1">
                <input
                  type="text"
                  value={searchValue}
                  onChange={(e) => setSearchValue(e.target.value)}
                  placeholder="Search..."
                  className="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:border-yellow-500"
                />
              </div>

              {/* Search Type Dropdown */}
              <div className="md:w-64">
                <select
                  value={searchType}
                  onChange={(e) => setSearchType(e.target.value)}
                  className="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white focus:outline-none focus:border-yellow-500"
                >
                  <option value="">Select Search Type</option>
                </select>
              </div>

              {/* Submit Button */}
              <button
                onClick={handleSubmit}
                className="px-8 py-3 bg-gradient-to-r from-yellow-500 to-yellow-600 text-black rounded-lg font-bold hover:from-yellow-600 hover:to-yellow-700 transition-colors flex items-center justify-center gap-2"
              >
                <Search size={20} />
                Submit
              </button>
            </div>
          </div>

          {/* Table */}
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="border-b border-gray-700">
                  <th className="text-left py-4 px-4 text-yellow-500 font-semibold">Request ID</th>
                  <th className="text-left py-4 px-4 text-yellow-500 font-semibold">Phone Number</th>
                  <th className="text-left py-4 px-4 text-yellow-500 font-semibold">Name</th>
                  <th className="text-left py-4 px-4 text-yellow-500 font-semibold">Type</th>
                  <th className="text-left py-4 px-4 text-yellow-500 font-semibold">Assigned To</th>
                  <th className="text-left py-4 px-4 text-yellow-500 font-semibold">Status</th>
                </tr>
              </thead>
              <tbody>
                {requests.length > 0 ? (
                  requests.map((request) => (
                    <tr
                      key={request.id}
                      className="border-b border-gray-800 hover:bg-gray-800 hover:bg-opacity-30 transition-colors"
                    >
                      <td className="py-4 px-4 text-white font-mono">{request.id}</td>
                      <td className="py-4 px-4 text-gray-300">{request.phone}</td>
                      <td className="py-4 px-4 text-white">{request.name}</td>
                      <td className="py-4 px-4 text-gray-300">{request.type}</td>
                      <td className="py-4 px-4 text-white">{request.assignedTo}</td>
                      <td className="py-4 px-4">
                        <span
                          className={`px-3 py-1 rounded-full text-sm font-semibold border ${getStatusColor(
                            request.status
                          )}`}
                        >
                          {request.status}
                        </span>
                      </td>
                    </tr>
                  ))
                ) : (
                  <tr>
                    <td colSpan="6" className="text-center py-12">
                      <p className="text-gray-500 text-lg">No requests found</p>
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );
}